name: Auto Release Workflow

on:
  create:
    tags:
      - 'v*' # Trigger on any tag starting with 'v'

jobs:
  auto_release_job:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Determine Next Release
        id: next_release
        run: |
          # Retrieve the created tag name
          CREATED_TAG=${{ github.ref }}
          
          # Remove the 'refs/tags/' prefix from the tag name
          TAG_NAME=${CREATED_TAG#refs/tags/}
          
          # Output the tag name as the next release version
          echo "::set-output name=next_release::$TAG_NAME"

      - name: Generate Release Source
        run: |
          # Create a zip file containing all the files in the 'mic' folder
          mkdir -p /tmp/output
          zip -r /tmp/output/release-source.zip mic/
      
#      - name: Create Release
#        id: create_release
#        run: |
#          Create the release using the 'gh' CLI with the PAT
#          gh release create ${{ steps.next_release.outputs.next_release }} release-source.zip --title "Release ${{ steps.next_release.outputs.next_release }}" --notes "Add release notes or description here"
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Upload Release Asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./release-source.zip
#          asset_name: release-source.zip
#          asset_content_type: application/zip
      - name: "Release"
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            /tmp/output/release-source.zip
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

